#!/usr/bin/env python
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import os, sys
import httplib
import pynotify
from urlparse import urlparse
from urllib import quote

host = "SOMELOCALHOST"
port = 80
base_uri = "file:///PATH_TO_MEDIA"
base_location = "WEB_LOCATION_OF_MEDIA"
nautilus_path = os.environ["NAUTILUS_SCRIPT_SELECTED_URIS"].splitlines()

def fling( path, port=port, title=None, description=None ):
  if type(port) == str:
    port = int(port)

  if not title:
    title = fname

  url = "http://%s:%d/%s" % ( host, port, path )

  print "title:",title
  print "description:", description
  print "url:", url

  fling_url = "http://flingo.tv/fling/fling?%s" % (
    "title=%s&description=%s&url=%s&version=%s"%(
    title, quote(description), quote(url), "1.0.12" ))

  print "fling_url:", fling_url
  result = get(fling_url)

  return result


# pulls down resource from given URL and returns the response body as a string.
def get(url):
  (scheme, netloc, path, pars, query, fragment) = urlparse(url)
  lst = netloc.split(":")
  if len(lst) == 2:
    host, port = lst
  else:
    host, port = lst[0], 80

  conn = httplib.HTTPConnection(netloc, port)

  # http://foo.com/a/b/c?do=blah&po=fa --> /foo.com/a/b/c?do=blah&po=fa
  long_path = "/" + "/".join(url.split("/")[3:])
  conn.request("GET", long_path )

  r = conn.getresponse()
  if r.status != 200:
    raise Exception( "** fling encountered error. returned status: %s %s" % (
      r.status, r.reason ))
  data = r.read()
  return data

for n_path in nautilus_path:
  fling_path = base_location+n_path.replace(base_uri, '').rstrip()
  result = fling(fling_path, port, os.path.basename(n_path), "Flung from Nautilus")
  pynotify.init("Fling Info")
  n = pynotify.Notification("Fling Result",result+"\n"+fling_path,"stock_internet")
  n.show()
